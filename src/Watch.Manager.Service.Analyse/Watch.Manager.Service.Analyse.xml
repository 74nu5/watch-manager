<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Watch.Manager.Service.Analyse</name>
    </assembly>
    <members>
        <member name="T:Watch.Manager.Service.Analyse.Abstractions.IWebSiteService">
            <summary>
                Defines a service for retrieving and processing the source content of a website.
            </summary>
            <remarks>
                This interface provides a method to extract the source content of a website from a specified URL.
                Implementations of this interface may include additional processing, such as parsing or validation, depending on the
                use case.
            </remarks>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Abstractions.IWebSiteService.GetWebSiteSource(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Retrieves and processes the source content of the specified website.
            </summary>
            <remarks>
                This method performs an asynchronous operation to fetch and process the content of the
                specified website.  The caller is responsible for ensuring that the provided URL is valid and
                accessible.
            </remarks>
            <param name="url">The URL of the website to retrieve. Must be a valid, absolute URI.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests. If canceled, the operation will terminate early.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains an <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractedSite" />
                object  representing the processed content of the website.
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Extensions.ServiceAnalyzeExtensions">
            <summary>
                Provides extension methods for configuring and adding services related to analysis functionality  in an application.
            </summary>
            <remarks>
                This static class includes methods to extend the functionality of <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />
                and <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationBuilder" /> for integrating various services and configurations  such as Azure App
                Configuration, OpenAI clients, and custom AI services.
            </remarks>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Extensions.ServiceAnalyzeExtensions.AddAnalyzeConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
                Adds Azure App Configuration to the specified <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.
            </summary>
            <remarks>
                This method configures the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to use a specific Azure App
                Configuration endpoint. Ensure that the connection string used in the configuration is valid and has the
                necessary permissions to access the Azure App Configuration resource.
            </remarks>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to which the Azure App Configuration source will be added.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> with the Azure App Configuration source added.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Extensions.ServiceAnalyzeExtensions.AddAnalyzeServices(Microsoft.Extensions.Hosting.IHostApplicationBuilder)">
            <summary>
                Configures and registers services required for data analysis and AI-based operations.
            </summary>
            <remarks>
                This method adds various services to the application's dependency injection container,
                including services for  data sanitization, website processing, and AI-based embedding and chat functionalities.
                The configuration is  determined based on the application's settings, such as whether Ollama or OpenAI services
                are enabled.
                    - If Ollama is enabled, the method configures the Ollama API client for embedding and chatfunctionalities.
                    - If OpenAI is enabled, the method configures the OpenAI client for embedding and chat functionalities, using models specified in the application's configuration.
                Additionally, this method registers AI services for embedding extraction, data extraction, and article classification.
            </remarks>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationBuilder" /> used to configure the application and its services.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the tokenizer for the specified embedding model cannot be found when OpenAI is enabled.</exception>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.CategoryClassificationResult">
            <summary>
            Résultat de la classification automatique d'un article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryClassificationResult.CategoryId">
            <summary>
            Identifiant de la catégorie suggérée.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryClassificationResult.CategoryName">
            <summary>
            Nom de la catégorie suggérée.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryClassificationResult.ConfidenceScore">
            <summary>
            Score de confiance de la classification (0.0 à 1.0).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryClassificationResult.Reason">
            <summary>
            Raison de la classification (mots-clés matchés, similarité sémantique, etc.).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryClassificationResult.IsRecommendedForAutoAssignment">
            <summary>
            Indique si cette catégorie est recommandée pour une assignation automatique.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.CategorySuggestion">
            <summary>
            Suggestion pour une nouvelle catégorie basée sur l'analyse des articles.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.SuggestedName">
            <summary>
            Nom suggéré pour la nouvelle catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.SuggestedDescription">
            <summary>
            Description suggérée pour la nouvelle catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.SuggestedKeywords">
            <summary>
            Mots-clés suggérés pour la nouvelle catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.RelevanceScore">
            <summary>
            Score de pertinence de la suggestion (0.0 à 1.0).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.PotentialArticleCount">
            <summary>
            Nombre d'articles qui seraient classés dans cette catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.ExampleArticleIds">
            <summary>
            Exemples d'articles qui seraient dans cette catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestion.Reason">
            <summary>
            Raison de la suggestion.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.CategoryForClassification">
            <summary>
            Représente une catégorie utilisée pour la classification.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.Id">
            <summary>
            Identifiant unique de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.Name">
            <summary>
            Nom de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.Description">
            <summary>
            Description de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.Keywords">
            <summary>
            Mots-clés associés à la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.AutoThreshold">
            <summary>
            Seuil de confiance pour la classification automatique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.ManualThreshold">
            <summary>
            Seuil de confiance pour la classification manuelle.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.Embedding">
            <summary>
            Embedding vectoriel de la catégorie pour la comparaison sémantique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategoryForClassification.IsActive">
            <summary>
            Indique si la catégorie est active.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult">
            <summary>
            Représente une suggestion de catégorie avec un score de confiance.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult.CategoryId">
            <summary>
            Identifiant de la catégorie suggérée.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult.CategoryName">
            <summary>
            Nom de la catégorie suggérée.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult.ConfidenceScore">
            <summary>
            Score de confiance entre 0 et 1.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult.Reason">
            <summary>
            Raison de la suggestion (mots-clés correspondants, similarité sémantique, etc.).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult.ExceedsAutoThreshold">
            <summary>
            Indique si la suggestion dépasse le seuil automatique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.CategorySuggestionResult.ExceedsManualThreshold">
            <summary>
            Indique si la suggestion dépasse le seuil manuel.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.NewCategorySuggestion">
            <summary>
            Représente une suggestion de nouvelle catégorie à créer.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.NewCategorySuggestion.SuggestedName">
            <summary>
            Nom suggéré pour la nouvelle catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.NewCategorySuggestion.SuggestedDescription">
            <summary>
            Description suggérée pour la nouvelle catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.NewCategorySuggestion.SuggestedKeywords">
            <summary>
            Mots-clés suggérés pour la nouvelle catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.NewCategorySuggestion.RelevanceScore">
            <summary>
            Score de pertinence de la suggestion entre 0 et 1.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.NewCategorySuggestion.Justification">
            <summary>
            Justification de la suggestion de nouvelle catégorie.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.ArticleClassificationResult">
            <summary>
            Représente les résultats de la classification automatique d'un article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ArticleClassificationResult.ArticleId">
            <summary>
            Identifiant de l'article classifié.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ArticleClassificationResult.CategorySuggestions">
            <summary>
            Suggestions de catégories existantes.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ArticleClassificationResult.NewCategorySuggestions">
            <summary>
            Suggestions de nouvelles catégories à créer.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ArticleClassificationResult.OverallConfidence">
            <summary>
            Score de confiance global de la classification.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ArticleClassificationResult.ClassificationDate">
            <summary>
            Horodatage de la classification.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.ClassificationOptions">
            <summary>
            Options pour la classification automatique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ClassificationOptions.MinAutoClassificationScore">
            <summary>
            Score minimum pour une classification automatique (par défaut 0.7).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ClassificationOptions.MinSuggestionScore">
            <summary>
            Score minimum pour une suggestion de classification (par défaut 0.5).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ClassificationOptions.MaxSuggestionsPerArticle">
            <summary>
            Nombre maximum de catégories à suggérer par article (par défaut 5).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ClassificationOptions.EnableAutoClassification">
            <summary>
            Indique si la classification automatique est activée (par défaut true).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ClassificationOptions.KeywordMatchWeight">
            <summary>
            Poids accordé à la correspondance des mots-clés (par défaut 0.3).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ClassificationOptions.SemanticSimilarityWeight">
            <summary>
            Poids accordé à la similarité sémantique (par défaut 0.7).
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel">
            <summary>
                Represents the extracted analysis data including tags, authors, summary, and title.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel.Tags">
            <summary>
                Gets or sets the tags associated with the analysis.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel.Authors">
            <summary>
                Gets or sets the authors of the analysis.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel.Summary">
            <summary>
                Gets or sets the summary of the analysis.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel.TagsJoin">
            <summary>
                Gets the tags joined as a single comma-separated string.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel.AuthorsJoin">
            <summary>
                Gets the authors joined as a single comma-separated string.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel.Title">
            <summary>
                Gets or sets the title of the analysis.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Models.ExtractedSite">
            <summary>
                Represents a site extracted from a source, including its head, body, and thumbnail.
            </summary>
            <remarks>
                This record encapsulates the key components of an extracted site, such as its head content, body
                content,  and a thumbnail URI. It is immutable except for the <see cref="P:Watch.Manager.Service.Analyse.Models.ExtractedSite.ThumbnailBase64" /> property, which can be
                modified.
            </remarks>
            <param name="Head">The head content of the extracted site, typically containing metadata and links to stylesheets or scripts.</param>
            <param name="Body">The body content of the extracted site, representing the main content and structure of the webpage.</param>
            <param name="Thumbnail">The URI of the thumbnail image associated with the extracted site, which can be used for preview purposes.</param>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Models.ExtractedSite.#ctor(System.String,System.String,System.Uri)">
            <summary>
                Represents a site extracted from a source, including its head, body, and thumbnail.
            </summary>
            <remarks>
                This record encapsulates the key components of an extracted site, such as its head content, body
                content,  and a thumbnail URI. It is immutable except for the <see cref="P:Watch.Manager.Service.Analyse.Models.ExtractedSite.ThumbnailBase64" /> property, which can be
                modified.
            </remarks>
            <param name="Head">The head content of the extracted site, typically containing metadata and links to stylesheets or scripts.</param>
            <param name="Body">The body content of the extracted site, representing the main content and structure of the webpage.</param>
            <param name="Thumbnail">The URI of the thumbnail image associated with the extracted site, which can be used for preview purposes.</param>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractedSite.Head">
            <summary>The head content of the extracted site, typically containing metadata and links to stylesheets or scripts.</summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractedSite.Body">
            <summary>The body content of the extracted site, representing the main content and structure of the webpage.</summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractedSite.Thumbnail">
            <summary>The URI of the thumbnail image associated with the extracted site, which can be used for preview purposes.</summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Models.ExtractedSite.ThumbnailBase64">
            <summary>
                Gets or sets the Base64-encoded representation of the thumbnail image.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Options.AIOptions">
            <summary>
                Represents configuration options for AI-related settings.
            </summary>
            <remarks>
                This class provides a container for settings related to AI functionality,  including specific
                configurations for OpenAI.
            </remarks>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Options.AIOptions.OpenAI">
            <summary>Settings related to the use of OpenAI.</summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Options.OpenAIOptions">
            <summary>
                Represents configuration options for interacting with the OpenAI API.
            </summary>
            <remarks>
                This class provides settings for specifying the behavior and parameters used when communicating with
                the OpenAI API. For example, the <see cref="P:Watch.Manager.Service.Analyse.Options.OpenAIOptions.ChatModel" /> property determines which chat model is used for generating responses.
            </remarks>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Options.OpenAIOptions.ChatModel">
            <summary>The name of the chat model to use.</summary>
            <remarks>When using Azure OpenAI, this should be the "Deployment name" of the chat model.</remarks>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.SanitizeService">
            <summary>
                Provides methods to sanitize and extract relevant content from website sources,
                including HTML strings and URIs. Removes unnecessary elements and limits content size for embedding.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.SanitizeService.#ctor(System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Watch.Manager.Service.Analyse.SanitizeService" /> class.
            </summary>
            <param name="serviceProvider">The service provider used to resolve dependencies.</param>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.SanitizeService.SanitizeWebSiteSource(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Sanitizes the website content from the specified URI and extracts the head, body, and thumbnail.
            </summary>
            <param name="source">The URI of the website to sanitize.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>
                An <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractedSite" /> containing the sanitized head, body, and thumbnail URI.
            </returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.SanitizeService.SanitizeInternal(AngleSharp.Dom.IDocument)">
            <summary>
                Internal method to sanitize the provided HTML document, removing scripts, styles, and links,
                and extracting the head, body, and thumbnail.
            </summary>
            <param name="document">The HTML document to sanitize.</param>
            <returns>
                An <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractedSite" /> containing the sanitized head, body, and thumbnail URI.
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.SanitizeYoutubeService">
            <summary>
                Provides methods to sanitize and extract relevant content from YouTube website sources,
                including HTML strings and URIs. Removes unnecessary elements and extracts metadata for embedding.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.SanitizeYoutubeService.#ctor(System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Watch.Manager.Service.Analyse.SanitizeYoutubeService" /> class.
            </summary>
            <param name="serviceProvider">The service provider used to resolve dependencies.</param>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.SanitizeYoutubeService.SanitizeWebSiteSource(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Sanitizes the YouTube website content from the specified URI and extracts the head, body, and thumbnail.
            </summary>
            <param name="source">The URI of the YouTube website to sanitize.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>
                An <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractedSite" /> containing the sanitized head, body, and thumbnail URI.
            </returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.SanitizeYoutubeService.SanitizeInternal(AngleSharp.Dom.IDocument)">
            <summary>
                Internal method to sanitize the provided HTML document, removing scripts, styles, and links,
                and extracting the head, body, and thumbnail.
            </summary>
            <param name="document">The HTML document to sanitize.</param>
            <returns>
                An <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractedSite" /> containing the sanitized head, body, and thumbnail URI.
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.ArticleClassificationAI">
            <summary>
                Service de classification automatique d'articles par IA.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ArticleClassificationAI.IsEnabled">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationAI.ClassifyArticleAsync(System.String,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Analyse.Models.CategoryForClassification},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationAI.SuggestNewCategoriesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationAI.CalculateSemanticSimilarity(System.Single[],System.Single[])">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationAI.LearnFromFeedbackAsync(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.ArticleClassificationService">
            <summary>
                Service de classification automatique des articles par IA utilisant les embeddings existants.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.#ctor(Watch.Manager.Service.Database.Context.ArticlesContext,Watch.Manager.Service.Analyse.Services.IExtractEmbeddingAI,Microsoft.Extensions.Logging.ILogger{Watch.Manager.Service.Analyse.Services.ArticleClassificationService})">
            <summary>
                Initializes a new instance of the <see cref="T:Watch.Manager.Service.Analyse.Services.ArticleClassificationService" /> class.
            </summary>
            <param name="context">The database context used to access and manage articles.</param>
            <param name="embeddingService">The service used to extract embeddings for article classification.</param>
            <param name="logger">The logger instance used for logging diagnostic and operational messages.</param>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.ClassifyArticleAsync(System.Int32,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.ClassifyArticleAsync(Watch.Manager.Service.Database.Entities.Article,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.ClassifyArticlesBatchAsync(System.Collections.Generic.IEnumerable{System.Int32},Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.AutoAssignCategoriesAsync(System.Int32,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.SuggestNewCategoriesAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.UpdateCategoryEmbeddingsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.EvaluateClassificationQualityAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CalculateKeywordMatchScore(Watch.Manager.Service.Database.Entities.Article,Watch.Manager.Service.Database.Entities.Category)">
            <summary>
                Calcule le score de correspondance des mots-clés.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CombineEmbeddings(System.Single[],System.Single[])">
            <summary>
                Combine deux embeddings en calculant leur moyenne pondérée.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CalculateCosineSimilarity(System.Single[],System.Single[])">
            <summary>
                Calcule la similarité cosinus entre deux vecteurs.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.BuildCategoryText(Watch.Manager.Service.Database.Entities.Category)">
            <summary>
                Construit le texte représentatif d'une catégorie pour générer son embedding.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.ExtractKeywords(System.String)">
            <summary>
                Extrait les mots-clés d'un texte.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CapitalizeTag(System.String)">
            <summary>
                Met en forme un tag pour qu'il ressemble à un nom de catégorie.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CalculateClassificationScore(Watch.Manager.Service.Database.Entities.Article,Watch.Manager.Service.Database.Entities.Category,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <summary>
                Calcule le score de classification pour un article et une catégorie.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CalculateSemanticSimilarityScore(Watch.Manager.Service.Database.Entities.Article,Watch.Manager.Service.Database.Entities.Category)">
            <summary>
                Calcule la similarité sémantique entre l'article et la catégorie.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ArticleClassificationService.CalculateHistoricalScore(Watch.Manager.Service.Database.Entities.Article,Watch.Manager.Service.Database.Entities.Category,System.Threading.CancellationToken)">
            <summary>
                Calcule un score basé sur l'historique de classification.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.ExtractDataAI">
            <summary>
                Service for extracting and analyzing article data using an AI chat client.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ExtractDataAI.#ctor(System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Watch.Manager.Service.Analyse.Services.ExtractDataAI" /> class.
            </summary>
            <param name="serviceProvider">The service provider used to resolve dependencies.</param>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ExtractDataAI.ExtractDatasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Extracts and analyzes data from the provided article content using the AI chat client.
            </summary>
            <param name="content">The article content to analyze.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>
                An <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel" /> containing the extracted analysis data, or <see langword="null" /> if extraction fails.
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI">
            <summary>
                Provides functionality to generate embeddings for text or models using an AI-based embedding generator.
            </summary>
            <remarks>
                This class is designed to work with an embedding generator that produces embeddings for text input.
                It supports generating embeddings for individual text inputs or collections of models. The embeddings are truncated
                to a fixed dimensionality of 1536. The class also provides logging for tracing the embedding generation
                process.
            </remarks>
        </member>
        <member name="F:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI.logger">
            <summary>Logger for use in AI operations.</summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI.#ctor(Microsoft.Extensions.Logging.ILogger{Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI},System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI" /> class.
            </summary>
            <remarks>
                The constructor resolves an <see cref="T:Microsoft.Extensions.AI.IEmbeddingGenerator`2" /> instance
                from the provided service provider. Ensure that the service provider is configured to supply the required
                dependencies before using this class.
            </remarks>
            <param name="logger">The logger instance used to log diagnostic and operational messages.</param>
            <param name="provider">The service provider used to resolve dependencies, including the embedding generator.</param>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI.IsEnabled">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI.GetEmbeddingAsync(Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI.GetEmbeddingsAsync(System.Collections.Generic.IEnumerable{Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.ExtractEmbeddingAI.GetEmbeddingAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.IArticleClassificationAI">
            <summary>
            Interface pour la classification automatique d'articles par IA.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.IArticleClassificationAI.IsEnabled">
            <summary>
            Indique si le service de classification IA est activé.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationAI.ClassifyArticleAsync(System.String,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Analyse.Models.CategoryForClassification},System.Threading.CancellationToken)">
            <summary>
            Classifie automatiquement un article et suggère des catégories avec des scores de confiance.
            </summary>
            <param name="articleContent">Contenu de l'article à classifier.</param>
            <param name="availableCategories">Catégories disponibles pour la classification.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Liste des suggestions de catégories avec scores de confiance.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationAI.SuggestNewCategoriesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Suggère des nouvelles catégories basées sur le contenu d'un article.
            </summary>
            <param name="articleContent">Contenu de l'article.</param>
            <param name="existingCategories">Catégories existantes pour éviter les doublons.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Liste des suggestions de nouvelles catégories.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationAI.CalculateSemanticSimilarity(System.Single[],System.Single[])">
            <summary>
            Calcule la similarité sémantique entre un article et une catégorie en utilisant les embeddings.
            </summary>
            <param name="articleEmbedding">Embedding de l'article.</param>
            <param name="categoryEmbedding">Embedding de la catégorie.</param>
            <returns>Score de similarité entre 0 et 1.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationAI.LearnFromFeedbackAsync(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Améliore les modèles de classification basés sur les corrections manuelles.
            </summary>
            <param name="articleContent">Contenu de l'article.</param>
            <param name="correctCategories">Catégories correctes assignées manuellement.</param>
            <param name="incorrectCategories">Catégories incorrectes suggérées par l'IA.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Task représentant l'opération d'apprentissage.</returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.IArticleClassificationService">
            <summary>
            Service de classification automatique des articles par IA.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.ClassifyArticleAsync(System.Int32,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <summary>
            Classifie automatiquement un article en suggérant des catégories appropriées.
            </summary>
            <param name="articleId">Identifiant de l'article à classifier.</param>
            <param name="options">Options de classification.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Liste des catégories suggérées avec leurs scores de confiance.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.ClassifyArticleAsync(Watch.Manager.Service.Database.Entities.Article,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <summary>
            Classifie automatiquement un article en suggérant des catégories appropriées.
            </summary>
            <param name="article">Article à classifier.</param>
            <param name="options">Options de classification.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Liste des catégories suggérées avec leurs scores de confiance.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.ClassifyArticlesBatchAsync(System.Collections.Generic.IEnumerable{System.Int32},Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <summary>
            Classifie automatiquement plusieurs articles en lot.
            </summary>
            <param name="articleIds">Identifiants des articles à classifier.</param>
            <param name="options">Options de classification.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Dictionnaire associant chaque article à ses catégories suggérées.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.AutoAssignCategoriesAsync(System.Int32,Watch.Manager.Service.Analyse.Models.ClassificationOptions,System.Threading.CancellationToken)">
            <summary>
            Applique automatiquement les classifications recommandées pour un article.
            </summary>
            <param name="articleId">Identifiant de l'article.</param>
            <param name="options">Options de classification.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Nombre de catégories assignées automatiquement.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.SuggestNewCategoriesAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Génère des suggestions de nouvelles catégories basées sur l'analyse des articles non classifiés.
            </summary>
            <param name="maxSuggestions">Nombre maximum de suggestions à retourner.</param>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Liste des suggestions de nouvelles catégories.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.UpdateCategoryEmbeddingsAsync(System.Threading.CancellationToken)">
            <summary>
            Améliore les embeddings des catégories basés sur les articles assignés manuellement.
            </summary>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Nombre de catégories dont les embeddings ont été mis à jour.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IArticleClassificationService.EvaluateClassificationQualityAsync(System.Threading.CancellationToken)">
            <summary>
            Évalue la qualité des classifications existantes et suggère des améliorations.
            </summary>
            <param name="cancellationToken">Token d'annulation.</param>
            <returns>Rapport d'évaluation des classifications.</returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport">
            <summary>
            Rapport d'évaluation de la qualité des classifications.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.TotalArticles">
            <summary>
            Nombre total d'articles évalués.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.AutoClassifiedArticles">
            <summary>
            Nombre d'articles avec classifications automatiques.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.ManuallyClassifiedArticles">
            <summary>
            Nombre d'articles avec classifications manuelles.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.AverageConfidenceScore">
            <summary>
            Score moyen de confiance des classifications automatiques.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.TopCategories">
            <summary>
            Catégories les plus utilisées.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.ArticlesSuggestedForReview">
            <summary>
            Articles suggérés pour révision manuelle.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.ClassificationQualityReport.ImprovementSuggestions">
            <summary>
            Suggestions d'amélioration du système de classification.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.IExtractDataAI">
            <summary>
                Defines a contract for extracting and analyzing data from a given content string.
            </summary>
            <remarks>
                This interface is designed to process textual content and return an analysis result encapsulated in
                an <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel" />. The implementation may vary depending on the specific data extraction and
                analysis logic.
            </remarks>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IExtractDataAI.ExtractDatasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Extracts and analyzes data from the provided content.
            </summary>
            <remarks>
                This method performs an asynchronous operation to extract and analyze data from the given
                content.  The caller can use the <paramref name="cancellationToken" /> to cancel the operation if
                needed.
            </remarks>
            <param name="content">The input content to be analyzed. Cannot be null or empty.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>
                An <see cref="T:Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel" /> containing the results of the analysis, or <see langword="null" /> if the
                extraction fails.
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Analyse.Services.IExtractEmbeddingAI">
            <summary>
                Defines an interface for extracting embedding vectors using an AI system.
            </summary>
            <remarks>
                This interface provides methods to generate embedding vectors for text or catalog items,  which can
                be used for tasks such as similarity analysis, clustering, or other AI-driven operations.  Implementations of this
                interface may vary in how embeddings are generated, but the exposed methods  ensure a consistent API for
                consumers.
            </remarks>
        </member>
        <member name="P:Watch.Manager.Service.Analyse.Services.IExtractEmbeddingAI.IsEnabled">
            <summary>
                Gets whether the AI system is enabled.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IExtractEmbeddingAI.GetEmbeddingAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Gets an embedding vector for the specified text.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IExtractEmbeddingAI.GetEmbeddingAsync(Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel,System.Threading.CancellationToken)">
            <summary>
                Gets an embedding vector for the specified catalog item.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Analyse.Services.IExtractEmbeddingAI.GetEmbeddingsAsync(System.Collections.Generic.IEnumerable{Watch.Manager.Service.Analyse.Models.ExtractAnalyseModel},System.Threading.CancellationToken)">
            <summary>
                Gets embedding vectors for the specified catalog items.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.Get``1(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Attempts to bind the configuration instance to a new instance of type T.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.ValidateConfigurationKeys(System.Type,System.Lazy{System.Collections.Generic.HashSet{System.String}},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.BinderOptions)">
            <summary>If required by the binder options, validates that there are no unknown keys in the input configuration object.</summary>
        </member>
    </members>
</doc>
