<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Watch.Manager.Service.Database</name>
    </assembly>
    <members>
        <member name="T:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore">
            <summary>
                Interface for storing and retrieving analyzed articles and related data.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore.StoreArticleAnalyzeAsync(Watch.Manager.Service.Database.Entities.Article,System.Threading.CancellationToken)">
            <summary>
                Stores an analyzed article asynchronously.
            </summary>
            <param name="analyzeModel">The analyzed article model to store.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore.SearchArticleAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Searches for articles asynchronously based on search terms and tag.
            </summary>
            <param name="searchTerms">The search terms to filter articles, or null to ignore.</param>
            <param name="tag">The tag to filter articles, or null to ignore.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>An asynchronous stream of article result DTOs matching the criteria.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore.AdvancedSearchArticlesAsync(Watch.Manager.Service.Database.Models.ArticleSearchFilters,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Performs an advanced search for articles using multiple filter criteria.
            </summary>
            <param name="filters">The search filters to apply. Allows filtering articles by search terms, tags, authors, categories, date range, minimum score, pagination, and sorting.</param>
            <param name="includeFacets">Indicates whether facets (counts by category, tag, author, period) should be included in the result to enable dynamic filtering on the client side.</param>
            <param name="cancellationToken">A cancellation token to observe while waiting for the task to complete.</param>
            <returns>A task that returns an <see cref="T:Watch.Manager.Service.Database.Models.ArticleSearchResult" /> containing the paginated list of matching articles, the total result count, the pagination parameters used, and, if requested, the search facets.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore.IsArticleExistsAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Checks asynchronously if an article exists by its URL.
            </summary>
            <param name="url">The URL of the article to check.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns true if the article exists, otherwise false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore.GetAllTagsAsync(System.Threading.CancellationToken)">
            <summary>
                Retrieves all tags used in articles asynchronously.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns an array of all tags.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.IArticleAnalyseStore.GetThumbnailAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves the thumbnail image for a given article asynchronously.
            </summary>
            <param name="id">The unique identifier of the article.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>
                A value task that returns a tuple containing the thumbnail as a memory stream and the file name (if available).
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Database.Abstractions.ICategoryStore">
            <summary>
                Interface for managing categories.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetAllCategoriesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Retrieves all categories.
            </summary>
            <param name="includeInactive">Whether to include inactive categories.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An array of all categories.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetCategoryByIdAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves a category by its identifier.
            </summary>
            <param name="id">The category identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The category if found; otherwise, null.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.CreateCategoryAsync(Watch.Manager.Service.Database.Entities.Category,System.Threading.CancellationToken)">
            <summary>
                Creates a new category.
            </summary>
            <param name="category">The category to create.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The created category.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.UpdateCategoryAsync(Watch.Manager.Service.Database.Entities.Category,System.Threading.CancellationToken)">
            <summary>
                Updates an existing category.
            </summary>
            <param name="category">The category to update.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The updated category.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.DeleteCategoryAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Deletes a category.
            </summary>
            <param name="id">The identifier of the category to delete.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>True if the deletion succeeded; otherwise, false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetRootCategoriesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Retrieves root categories (categories without a parent).
            </summary>
            <param name="includeInactive">Whether to include inactive categories.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A collection of root categories with their children.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.CategoryExistsAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Checks if a category exists.
            </summary>
            <param name="id">The category identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>True if the category exists; otherwise, false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.CategoryNameExistsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
                Checks if a category name already exists.
            </summary>
            <param name="name">The category name.</param>
            <param name="excludeId">An identifier to exclude from the check.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>True if the name already exists; otherwise, false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.AssignCategoryToArticleAsync(System.Int32,System.Int32,System.Boolean,System.Nullable{System.Double},System.Threading.CancellationToken)">
            <summary>
                Assigns a category to an article.
            </summary>
            <param name="articleId">The article identifier.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="isManual">Indicates if the assignment is manual.</param>
            <param name="confidenceScore">Confidence score for automatic assignments.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>True if the assignment succeeded; otherwise, false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.RemoveCategoryFromArticleAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Removes a category from an article.
            </summary>
            <param name="articleId">The article identifier.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>True if the removal succeeded; otherwise, false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetArticleCategoriesAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves the categories assigned to an article.
            </summary>
            <param name="articleId">The article identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A collection of categories assigned to the article.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetArticleCountInCategoryAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Counts the number of articles in a category.
            </summary>
            <param name="categoryId">The category identifier.</param>
            <param name="includeChildren">Whether to include articles from subcategories.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The number of articles in the category.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetLinkedArticleTitlesAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves the titles of articles linked to a category.
            </summary>
            <param name="categoryId">The category identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An array of article titles.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.UpdateAllHierarchyPathsAsync(System.Threading.CancellationToken)">
            <summary>
                Updates the hierarchy paths of all categories.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The number of categories updated.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetCategoriesAsTreeAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Retrieves categories organized as a hierarchical tree.
            </summary>
            <param name="includeInactive">Whether to include inactive categories.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An array of categories organized as a tree.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetCategoryDescendantsAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Retrieves all descendants of a category.
            </summary>
            <param name="categoryId">The parent category identifier.</param>
            <param name="includeInactive">Whether to include inactive categories.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An array of descendant categories.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.GetCategoryAncestorsAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves the ancestors of a category (breadcrumb).
            </summary>
            <param name="categoryId">The category identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An array of ancestor categories, from closest to farthest.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.WouldCreateCircularReferenceAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Checks if changing the parent would create a circular reference.
            </summary>
            <param name="categoryId">The category identifier.</param>
            <param name="newParentId">The new parent identifier.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>True if a circular reference would be created; otherwise, false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Abstractions.ICategoryStore.ReorderCategoriesAsync(System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Threading.CancellationToken)">
            <summary>
                Reorders the display order of categories.
            </summary>
            <param name="categoryOrders">A dictionary of display orders by category ID.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The number of categories updated.</returns>
        </member>
        <member name="T:Watch.Manager.Service.Database.ArticleAnalyseStore">
            <summary>
                Provides storage and retrieval operations for analyzed articles, including search and thumbnail access.
            </summary>
            <param name="logger">The logger instance used for logging information and errors.</param>
            <param name="articlesContext">The database context used for accessing and managing article data.</param>
            <param name="searchable">The vector searchable interface used for performing vector-based searches on article data.</param>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.#ctor(Microsoft.Extensions.Logging.ILogger{Watch.Manager.Service.Database.ArticleAnalyseStore},Watch.Manager.Service.Database.Context.ArticlesContext,Microsoft.Extensions.VectorData.IVectorSearchable{Watch.Manager.Service.Database.Entities.ArticleSearchEntity})">
            <summary>
                Provides storage and retrieval operations for analyzed articles, including search and thumbnail access.
            </summary>
            <param name="logger">The logger instance used for logging information and errors.</param>
            <param name="articlesContext">The database context used for accessing and managing article data.</param>
            <param name="searchable">The vector searchable interface used for performing vector-based searches on article data.</param>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.StoreArticleAnalyzeAsync(Watch.Manager.Service.Database.Entities.Article,System.Threading.CancellationToken)">
            <summary>
                Stores an analyzed article asynchronously in the database.
            </summary>
            <param name="analyzeModel">The analyzed article model to store.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.IsArticleExistsAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Checks asynchronously if an article exists by its URL.
            </summary>
            <param name="url">The URL of the article to check.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns true if the article exists, otherwise false.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.SearchArticleAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Searches for articles asynchronously based on search terms and/or tag.
            </summary>
            <param name="searchTerms">The search terms to filter articles, or null to ignore.</param>
            <param name="tag">The tag to filter articles, or null to ignore.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>An asynchronous stream of article result DTOs matching the criteria.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.AdvancedSearchArticlesAsync(Watch.Manager.Service.Database.Models.ArticleSearchFilters,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.GetAllTagsAsync(System.Threading.CancellationToken)">
            <summary>
                Retrieves all unique tags used in articles asynchronously.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns an array of all tags.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.GetThumbnailAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves the thumbnail image for a given article asynchronously.
            </summary>
            <param name="id">The unique identifier of the article.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>
                A value task that returns a tuple containing the thumbnail as a memory stream and the file name (if available).
            </returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.EnhanceWithVectorSearchAsync(Watch.Manager.Service.Database.Models.ArticleResultDto[],System.String,System.Threading.CancellationToken)">
            <summary>
                Enhance search results with vector search scores.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.ArticleAnalyseStore.GenerateFacetsAsync(Watch.Manager.Service.Database.Models.ArticleSearchFilters,System.Threading.CancellationToken)">
            <summary>
                Generates search facets based on the current filters.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.CategoryStore">
            <summary>
                Implementation of the category management service.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.#ctor(Microsoft.Extensions.Logging.ILogger{Watch.Manager.Service.Database.CategoryStore},Watch.Manager.Service.Database.Context.ArticlesContext)">
            <summary>
                Implementation of the category management service.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetAllCategoriesAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetCategoryByIdAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.CreateCategoryAsync(Watch.Manager.Service.Database.Entities.Category,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.UpdateCategoryAsync(Watch.Manager.Service.Database.Entities.Category,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.DeleteCategoryAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetRootCategoriesAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.CategoryExistsAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.CategoryNameExistsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.AssignCategoryToArticleAsync(System.Int32,System.Int32,System.Boolean,System.Nullable{System.Double},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.RemoveCategoryFromArticleAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetArticleCategoriesAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetArticleCountInCategoryAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetLinkedArticleTitlesAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.UpdateAllHierarchyPathsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetCategoriesAsTreeAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetCategoryDescendantsAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetCategoryAncestorsAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.WouldCreateCircularReferenceAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.ReorderCategoriesAsync(System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.CategoryStore.GetCategoryAndChildrenIdsAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
                Retrieves the ID of a category and all its child category IDs recursively.
            </summary>
            <param name="categoryId">The parent category ID.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>List of category IDs.</returns>
        </member>
        <member name="T:Watch.Manager.Service.Database.Context.ArticlesContext">
            <summary>
                Represents the Entity Framework Core database context for managing articles, categories, and saved searches.
            </summary>
            <remarks>This context exposes <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties for each entity in the model. </remarks>
            <remarks>Initializes a new instance of the <see cref="T:Watch.Manager.Service.Database.Context.ArticlesContext" /> class using the specified options.</remarks>
            <param name="options">The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
        </member>
        <member name="M:Watch.Manager.Service.Database.Context.ArticlesContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Watch.Manager.Service.Database.Context.ArticlesContext})">
            <summary>
                Represents the Entity Framework Core database context for managing articles, categories, and saved searches.
            </summary>
            <remarks>This context exposes <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties for each entity in the model. </remarks>
            <remarks>Initializes a new instance of the <see cref="T:Watch.Manager.Service.Database.Context.ArticlesContext" /> class using the specified options.</remarks>
            <param name="options">The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
        </member>
        <member name="P:Watch.Manager.Service.Database.Context.ArticlesContext.Articles">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> of <see cref="T:Watch.Manager.Service.Database.Entities.Article" /> entities.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Context.ArticlesContext.Categories">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> of <see cref="T:Watch.Manager.Service.Database.Entities.Category" /> entities.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Context.ArticlesContext.ArticleCategories">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> of <see cref="T:Watch.Manager.Service.Database.Entities.ArticleCategory" /> entities.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Context.ArticlesContext.SavedSearches">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> of <see cref="T:Watch.Manager.Service.Database.Entities.SavedSearch" /> entities.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.Context.ArticlesContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                Configures the schema needed for the context.
            </summary>
            <param name="modelBuilder">The builder being used to construct the model for this context.</param>
        </member>
        <member name="T:Watch.Manager.Service.Database.Entities.Article">
            <summary>
                Represents an analyzed article stored in the system.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Id">
            <summary>
                Gets or sets the unique identifier of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Title">
            <summary>
                Gets or sets the title of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Tags">
            <summary>
                Gets or sets the tags associated with the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Authors">
            <summary>
                Gets or sets the authors of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Summary">
            <summary>
                Gets or sets the summary of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Url">
            <summary>
                Gets or sets the URL of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.AnalyzeDate">
            <summary>
                Gets or sets the analysis date of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.EmbeddingHead">
            <summary>
                Gets or sets the vector embedding of the article header for semantic search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.EmbeddingBody">
            <summary>
                Gets or sets the vector embedding of the article body for semantic search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.Thumbnail">
            <summary>
                Gets or sets the URL of the article thumbnail.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.ThumbnailBase64">
            <summary>
                Gets or sets the article thumbnail encoded in base64 format.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Article.ArticleCategories">
            <summary>
                Gets or sets the categories associated with this article.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Entities.ArticleCategory">
            <summary>
            Représente la relation many-to-many entre Article et Category.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.ArticleId">
            <summary>
            Identifiant de l'article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.Article">
            <summary>
            Article associé.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.CategoryId">
            <summary>
            Identifiant de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.Category">
            <summary>
            Catégorie associée.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.ConfidenceScore">
            <summary>
            Score de confiance de la classification (pour les classifications automatiques).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.IsManual">
            <summary>
            Indique si la classification a été faite manuellement ou automatiquement.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleCategory.AssignedAt">
            <summary>
            Date d'assignation de la catégorie à l'article.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Entities.ArticleSearchEntity">
            <summary>
                Represents an article entity used for search and vector storage operations.
            </summary>
        </member>
        <member name="F:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.VectorDimensions">
            <summary>
                Represents the fixed number of dimensions for a vector.
            </summary>
            <remarks>
                This constant defines the dimensionality of vectors used in the application.
                It is set to 1536, indicating that all vectors are 1536-dimensional.
            </remarks>
        </member>
        <member name="F:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.VectorDistanceFunction">
            <summary>
                Represents the distance function used for vector calculations.
            </summary>
            <remarks>
                This constant specifies the use of the cosine distance function for vector distance
                calculations. It is intended to be used in scenarios where cosine similarity or distance is required.
            </remarks>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Id">
            <summary>
                Gets or sets the unique identifier for the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Title">
            <summary>
                Gets or sets the title of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Tags">
            <summary>
                Gets or sets the tags associated with the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Authors">
            <summary>
                Gets or sets the authors of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Summary">
            <summary>
                Gets or sets the summary of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Url">
            <summary>
                Gets or sets the URL of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.AnalyzeDate">
            <summary>
                Gets or sets the date when the article was analyzed.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.EmbeddingHead">
            <summary>
                Gets or sets the vector embedding representing the head (main content) of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.EmbeddingBody">
            <summary>
                Gets or sets the vector embedding representing the body of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.Thumbnail">
            <summary>
                Gets or sets the thumbnail image URL for the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.ArticleSearchEntity.ThumbnailBase64">
            <summary>
                Gets or sets the base64-encoded thumbnail image for the article.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Entities.Category">
            <summary>
            Représente une catégorie pour organiser les articles.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Id">
            <summary>
            Identifiant unique de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Name">
            <summary>
            Nom de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Description">
            <summary>
            Description détaillée de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Color">
            <summary>
            Couleur associée à la catégorie (format hex).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Icon">
            <summary>
            Icône associée à la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Keywords">
            <summary>
            Mots-clés pour la classification automatique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.ParentId">
            <summary>
            Identifiant de la catégorie parente (pour la hiérarchie).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Parent">
            <summary>
            Catégorie parente.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Children">
            <summary>
            Sous-catégories.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.ArticleCategories">
            <summary>
            Articles associés à cette catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.CreatedAt">
            <summary>
            Date de création de la catégorie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.UpdatedAt">
            <summary>
            Date de dernière modification.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.IsActive">
            <summary>
            Indique si la catégorie est active.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.ConfidenceThreshold">
            <summary>
            Score de confiance pour la classification automatique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.Embedding">
            <summary>
            Embedding vectoriel de la catégorie pour la classification sémantique.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.AutoThreshold">
            <summary>
            Seuil automatique pour la classification.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.ManualThreshold">
            <summary>
            Seuil manuel pour la classification.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.InheritFromParent">
            <summary>
            Indique si cette catégorie hérite des propriétés de son parent.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.DisplayOrder">
            <summary>
            Ordre d'affichage dans la hiérarchie.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.HierarchyPath">
            <summary>
            Chemin complet dans la hiérarchie (ex: "Parent/Enfant/Sous-enfant").
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.Category.HierarchyLevel">
            <summary>
            Niveau de profondeur dans la hiérarchie (0 = racine).
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Entities.SavedSearch">
            <summary>
                Entity representing a saved search in the database.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.Id">
            <summary>
                Gets or sets identifiant unique de la recherche sauvegardée.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.Name">
            <summary>
                Gets or sets name given to the saved search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.Description">
            <summary>
                Gets or sets optional description of the search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.FiltersJson">
            <summary>
                Gets or sets search filters serialized in JSON format.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.CreatedAt">
            <summary>
                Gets or sets creation date of the saved search (UTC).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.LastUsedAt">
            <summary>
                Gets or sets last usage date of the saved search (UTC).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.UseCount">
            <summary>
                Gets or sets number of times this search has been used.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Entities.SavedSearch.IsFavorite">
            <summary>
                Gets or sets a value indicating whether indicates whether this search is marked as favorite.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions">
            <summary>
                Extensions for managing category hierarchy.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.CalculateHierarchyPath(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Calculates the full hierarchical path of a category.
            </summary>
            <param name="category">The category.</param>
            <param name="allCategories">All available categories.</param>
            <returns>The hierarchical path (e.g., "Parent/Child/Sub-child").</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.CalculateHierarchyLevel(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Calculates the depth level in the hierarchy.
            </summary>
            <param name="category">The category.</param>
            <param name="allCategories">All available categories.</param>
            <returns>The depth level (0 = root).</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.GetAncestors(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Gets all ancestors of a category.
            </summary>
            <param name="category">The category.</param>
            <param name="allCategories">All available categories.</param>
            <returns>List of ancestor categories (from closest to farthest).</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.GetAllDescendants(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Gets all descendants of a category recursively.
            </summary>
            <param name="category">The parent category.</param>
            <param name="allCategories">All available categories.</param>
            <returns>List of all descendant categories.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.IsAncestorOf(Watch.Manager.Service.Database.Entities.Category,Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Checks if a category is an ancestor of another category.
            </summary>
            <param name="potentialAncestor">The potential ancestor category.</param>
            <param name="category">The category to check.</param>
            <param name="allCategories">All available categories.</param>
            <returns>True if <paramref name="potentialAncestor" /> is an ancestor of <paramref name="category" />.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.GetEffectiveKeywords(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Gets the effective keywords of a category (including inheritance).
            </summary>
            <param name="category">The category.</param>
            <param name="allCategories">All available categories.</param>
            <returns>List of effective keywords.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.GetEffectiveConfidenceThreshold(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Gets the effective confidence threshold of a category (including inheritance).
            </summary>
            <param name="category">The category.</param>
            <param name="allCategories">All available categories.</param>
            <returns>The effective confidence threshold.</returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.UpdateDescendantsHierarchyPaths(Watch.Manager.Service.Database.Entities.Category,System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Updates the hierarchical paths of all descendants of a category.
            </summary>
            <param name="category">The parent category.</param>
            <param name="allCategories">All available categories.</param>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.CategoryHierarchyExtensions.ToHierarchicalTree(System.Collections.Generic.IEnumerable{Watch.Manager.Service.Database.Entities.Category})">
            <summary>
                Gets a hierarchical tree representation of the categories.
            </summary>
            <param name="categories">The categories to organize.</param>
            <returns>The root categories with their children organized as a tree.</returns>
        </member>
        <member name="T:Watch.Manager.Service.Database.Extensions.DatabaseExtensions">
            <summary>
                Provides extension methods for registering database-related services in the application.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.Extensions.DatabaseExtensions.AddDatabaseServices(Microsoft.Extensions.Hosting.IHostApplicationBuilder)">
            <summary>
                Registers database services, DbContext, and vector store components with the application's dependency injection container.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationBuilder" /> used to configure the application.</param>
            <exception cref="T:System.InvalidOperationException">
                Thrown if the required connection string 'articlesdb' is not configured.
            </exception>
        </member>
        <member name="T:Watch.Manager.Service.Database.Migrations.InitDatabase">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.Migrations.InitDatabase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.Migrations.InitDatabase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Watch.Manager.Service.Database.Migrations.InitDatabase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.ArticleResultDto">
            <summary>
            Data Transfer Object representing the result of an article analysis.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Id">
            <summary>
            Gets or sets the unique identifier of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Title">
            <summary>
            Gets or sets the title of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Tags">
            <summary>
            Gets or sets the tags associated with the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Authors">
            <summary>
            Gets or sets the authors of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Summary">
            <summary>
            Gets or sets the summary of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Url">
            <summary>
            Gets or sets the URL of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.AnalyzeDate">
            <summary>
            Gets or sets the date when the article was analyzed.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Thumbnail">
            <summary>
            Gets or sets the thumbnail image URL of the article.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Score">
            <summary>
            Gets or sets the score assigned to the article, if any.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleResultDto.Categories">
            <summary>
            Gets or sets the categories assigned to this article.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.ArticleSearchFilters">
            <summary>
                Model representing advanced search filters for articles.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.SearchTerms">
            <summary>
                Gets text search terms (title, summary, content).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.Tags">
            <summary>
                Gets tags to include in the search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.Authors">
            <summary>
                Gets authors to filter by.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.CategoryIds">
            <summary>
                Gets category IDs to include.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.CategoryNames">
            <summary>
                Gets category names to include (alternative to IDs).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.DateFrom">
            <summary>
                Gets start date for filtering by analysis date.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.DateTo">
            <summary>
                Gets end date for filtering by analysis date.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.MinScore">
            <summary>
                Gets minimum score for vector search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.Limit">
            <summary>
                Gets maximum number of results to return.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.Offset">
            <summary>
                Gets offset for pagination.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.SortBy">
            <summary>
                Gets result sorting criteria.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchFilters.SortOrder">
            <summary>
                Gets sort order (ascending or descending).
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.ArticleSearchResult">
            <summary>
                Represents the result of an article search, including pagination metadata.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchResult.Articles">
            <summary>
                Gets the articles found that match the search criteria.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchResult.TotalCount">
            <summary>
                Gets the total number of articles matching the filters (without pagination).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchResult.Count">
            <summary>
                Gets the number of articles returned in this page.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchResult.Offset">
            <summary>
                Gets the offset used for this search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchResult.Limit">
            <summary>
                Gets the limit used for this search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.ArticleSearchResult.Facets">
            <summary>
                Gets the search facets with counts by category.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.SavedSearchModel">
            <summary>
                Model representing a saved search for a user.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.Id">
            <summary>
                Gets the unique identifier of the saved search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.Name">
            <summary>
                Gets the name given to the saved search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.Description">
            <summary>
                Gets the optional description of the saved search.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.FiltersJson">
            <summary>
                Gets the search filters serialized as JSON.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.CreatedAt">
            <summary>
                Gets the creation date of the saved search (UTC).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.LastUsedAt">
            <summary>
                Gets the last usage date of the saved search (UTC).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.UseCount">
            <summary>
                Gets the number of times this search has been used.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SavedSearchModel.IsFavorite">
            <summary>
                Gets a value indicating whether this search is marked as favorite.
            </summary>
        </member>
        <member name="M:Watch.Manager.Service.Database.Models.SavedSearchModel.FromFilters(System.String,Watch.Manager.Service.Database.Models.ArticleSearchFilters,System.String)">
            <summary>
                Creates a new <see cref="T:Watch.Manager.Service.Database.Models.SavedSearchModel" /> instance from filters.
            </summary>
            <param name="name">The name of the saved search.</param>
            <param name="filters">The filters to save.</param>
            <param name="description">The optional description.</param>
            <returns>
                A new instance of <see cref="T:Watch.Manager.Service.Database.Models.SavedSearchModel" /> initialized with the provided filters and metadata.
            </returns>
        </member>
        <member name="M:Watch.Manager.Service.Database.Models.SavedSearchModel.GetFilters">
            <summary>
                Gets the deserialized search filters.
            </summary>
            <returns>
                The <see cref="T:Watch.Manager.Service.Database.Models.ArticleSearchFilters" /> instance if deserialization succeeds; otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.SearchFacets.AuthorFacet">
            <summary>
                Facet representing the number of articles per author.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.AuthorFacet.AuthorName">
            <summary>
                Gets the author's name.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.AuthorFacet.Count">
            <summary>
                Gets the number of articles for this author.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.SearchFacets.CategoryFacet">
            <summary>
                Facet representing the number of articles per category.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.CategoryFacet.CategoryId">
            <summary>
                Gets the category ID.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.CategoryFacet.CategoryName">
            <summary>
                Gets the category name.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.CategoryFacet.Count">
            <summary>
                Gets the number of articles in this category.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.CategoryFacet.Color">
            <summary>
                Gets the color associated with the category.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.CategoryFacet.Icon">
            <summary>
                Gets the icon associated with the category.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.SearchFacets.DateFacet">
            <summary>
                Facet representing the temporal distribution of articles.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.DateFacet.Period">
            <summary>
                Gets period (YYYY-MM for monthly, YYYY for yearly).
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.DateFacet.Count">
            <summary>
                Gets number of articles in this period.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.DateFacet.PeriodStart">
            <summary>
                Gets start date of the period.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.DateFacet.PeriodEnd">
            <summary>
                Gets end date of the period.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.SearchFacets.SearchFacets">
            <summary>
                Search facets with article counts by criteria.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.SearchFacets.Categories">
            <summary>
                Gets article counts by category.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.SearchFacets.Tags">
            <summary>
                Gets article counts by tag.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.SearchFacets.Authors">
            <summary>
                Gets article counts by author.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.SearchFacets.DateDistribution">
            <summary>
                Gets article distribution by period.
            </summary>
        </member>
        <member name="T:Watch.Manager.Service.Database.Models.SearchFacets.TagFacet">
            <summary>
                Facet representing the number of articles per tag.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.TagFacet.TagName">
            <summary>
                Gets tag name.
            </summary>
        </member>
        <member name="P:Watch.Manager.Service.Database.Models.SearchFacets.TagFacet.Count">
            <summary>
                Gets number of articles with this tag.
            </summary>
        </member>
    </members>
</doc>
