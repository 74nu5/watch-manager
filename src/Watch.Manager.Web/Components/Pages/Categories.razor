@page "/categories"

<h3>üìÅ Gestion des Cat√©gories</h3>

<div class="categories-container">
    <!-- Section Classification Automatique -->
    <FluentCard Class="classification-panel">
        <div class="panel-header">
            <h4>ü§ñ Classification Automatique par IA</h4>
            <FluentBadge Appearance="Appearance.Accent">Nouveau</FluentBadge>
        </div>

        <div class="classification-actions">
            <div class="action-group">
                <FluentButton Appearance="Appearance.Accent"
                            @onclick="SuggestNewCategories"
                            Loading="suggestingCategories">
                    ‚ú® Sugg√©rer de nouvelles cat√©gories
                </FluentButton>
                <p class="action-description">Analyse les articles non cat√©goris√©s pour sugg√©rer de nouvelles cat√©gories</p>
            </div>

            <div class="action-group">
                <FluentButton Appearance="Appearance.Outline"
                            @onclick="ShowBatchClassificationDialog"
                            Loading="false">
                    üìä Classification en lot
                </FluentButton>
                <p class="action-description">Classifie automatiquement plusieurs articles √† la fois</p>
            </div>
        </div>

        @if (newCategorySuggestions.Length > 0)
        {
            <div class="suggestions-section">
                <h5>üí° Nouvelles cat√©gories sugg√©r√©es</h5>
                <div class="suggestions-grid">
                    @foreach (var suggestion in newCategorySuggestions)
                    {
                        <div class="suggestion-card">
                            <div class="suggestion-header">
                                <strong>@suggestion.Name</strong>
                                <FluentBadge Appearance="Appearance.Neutral">
                                    @($"{suggestion.ConfidenceScore:P0}")
                                </FluentBadge>
                            </div>

                            @if (!string.IsNullOrEmpty(suggestion.Description))
                            {
                                <p class="suggestion-description">@suggestion.Description</p>
                            }

                            @if (suggestion.Keywords.Any())
                            {
                                <div class="suggestion-keywords">
                                    @foreach (var keyword in suggestion.Keywords)
                                    {
                                        <FluentBadge Appearance="Appearance.Lightweight">@keyword</FluentBadge>
                                    }
                                </div>
                            }

                            <div class="suggestion-actions">
                                <FluentButton Size="ButtonSize.Small"
                                            Appearance="Appearance.Accent"
                                            @onclick="() => CreateCategoryFromSuggestion(suggestion)">
                                    ‚ûï Cr√©er
                                </FluentButton>
                                <FluentButton Size="ButtonSize.Small"
                                            Appearance="Appearance.Stealth"
                                            @onclick="() => DismissSuggestion(suggestion)">
                                    ‚ùå Ignorer
                                </FluentButton>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </FluentCard>

    <div class="categories-header">
        <FluentButton Appearance="Appearance.Accent" @onclick="ShowCreateDialog">
            ‚ûï Nouvelle Cat√©gorie
        </FluentButton>
        <FluentSwitch @bind-Value="showInactive" @bind-Value:after="OnShowInactiveChanged" Label="Afficher les cat√©gories inactives" />
    </div>

    @if (loading)
    {
        <div class="loading-container">
            <FluentProgressRing />
            <p>Chargement des cat√©gories...</p>
        </div>
    }
    else if (categories.Length == 0)
    {
        <FluentCard>
            <div class="empty-state">
                <p style="font-size: 3em;">üìÅ</p>
                <h4>Aucune cat√©gorie</h4>
                <p>Commencez par cr√©er votre premi√®re cat√©gorie pour organiser vos articles.</p>
                <FluentButton Appearance="Appearance.Accent" @onclick="ShowCreateDialog">
                    Cr√©er une cat√©gorie
                </FluentButton>
            </div>
        </FluentCard>
    }
    else
    {
        <div class="categories-grid">
            @foreach (var category in categories)
            {
                <CategoryCard Category="category"
                             OnEdit="EditCategory"
                             OnDelete="DeleteCategory"
                             OnToggleActive="ToggleActiveCategory" />
            }
        </div>
    }
</div>

<!-- Dialog pour cr√©er/√©diter une cat√©gorie -->
<FluentDialog @bind-Hidden="hideDialog" Modal="true" TrapFocus="true" CloseOnOverlayClick="false">
    <FluentDialogHeader>
        <FluentLabel Typo="Typography.H4">
            @(editingCategory == null ? "Nouvelle Cat√©gorie" : "Modifier la Cat√©gorie")
        </FluentLabel>
    </FluentDialogHeader>

    <FluentDialogBody>
        <EditForm Model="categoryForm" OnValidSubmit="SaveCategory">
            <DataAnnotationsValidator />

            <div class="form-group">
                <FluentTextField @bind-Value="categoryForm.Name"
                               Label="Nom *"
                               Required="true"
                               Placeholder="Nom de la cat√©gorie" />
                <ValidationMessage For="@(() => categoryForm.Name)" />
            </div>

            <div class="form-group">
                <FluentTextArea @bind-Value="categoryForm.Description"
                              Label="Description"
                              Placeholder="Description de la cat√©gorie"
                              Rows="3" />
            </div>

            <div class="form-group">
                <FluentTextField @bind-Value="categoryForm.Color"
                               Label="Couleur (hex)"
                               Placeholder="#3498db" />
            </div>

            <div class="form-group">
                <FluentTextField @bind-Value="categoryForm.Icon"
                               Label="Ic√¥ne"
                               Placeholder="folder" />
            </div>

            <div class="form-group">
                <FluentTextField @bind-Value="keywordsText"
                               Label="Mots-cl√©s (s√©par√©s par des virgules)"
                               Placeholder="react, javascript, frontend" />
            </div>

            <div class="form-group">
                <FluentSelect @bind-SelectedOption="selectedParent"
                            Label="Cat√©gorie parente"
                            Placeholder="S√©lectionner une cat√©gorie parente">
                    <FluentOption Value="null">Aucune (cat√©gorie racine)</FluentOption>
                    @foreach (var cat in GetAvailableParentCategories())
                    {
                        <FluentOption Value="cat.Id">@cat.Name</FluentOption>
                    }
                </FluentSelect>
            </div>

            <div class="form-group">
                <FluentNumberField @bind-Value="categoryForm.ConfidenceThreshold"
                                 Label="Seuil de confiance (0.0 - 1.0)"
                                 Min="0"
                                 Max="1"
                                 Step="0.1" />
            </div>

            <div class="dialog-actions">
                <FluentButton @onclick="HideDialog" Appearance="Appearance.Neutral">
                    Annuler
                </FluentButton>
                <FluentButton Type="ButtonType.Submit"
                            Appearance="Appearance.Accent"
                            Loading="saving">
                    @(editingCategory == null ? "Cr√©er" : "Modifier")
                </FluentButton>
            </div>
        </EditForm>
    </FluentDialogBody>
</FluentDialog>

<!-- Dialog de confirmation de suppression -->
<FluentDialog @bind-Hidden="hideDeleteDialog" Modal="true" TrapFocus="true">
    <FluentDialogHeader>
        <FluentLabel Typo="Typography.H4">Confirmer la suppression</FluentLabel>
    </FluentDialogHeader>

    <FluentDialogBody>
        <p>√ätes-vous s√ªr de vouloir supprimer la cat√©gorie "<strong>@categoryToDelete?.Name</strong>" ?</p>
        <p class="warning-text">Cette action est irr√©versible et supprimera √©galement toutes les assignations d'articles √† cette cat√©gorie.</p>
    </FluentDialogBody>

    <FluentDialogFooter>
        <FluentButton @onclick="HideDeleteDialog" Appearance="Appearance.Neutral">
            Annuler
        </FluentButton>
        <FluentButton @onclick="ConfirmDelete"
                    Appearance="Appearance.Accent"
                    Loading="deleting">
            Supprimer
        </FluentButton>
    </FluentDialogFooter>
</FluentDialog>

@* Dialogue de classification par lot *@
<FluentDialog @bind-Hidden="hideBatchDialog" Modal="true" TrapFocus="true">
    <FluentDialogHeader>
        <h4>R√©sultats de la classification par lot</h4>
    </FluentDialogHeader>

    <FluentDialogBody>
        @if (batchClassifying)
        {
            <div class="loading-container">
                <FluentProgressRing />
                <p>Classification en cours...</p>
            </div>
        }
        else if (batchResults.Any())
        {
            <div class="batch-classification-content">
                <p>@batchResults.Length articles classifi√©s automatiquement :</p>

                <div class="classification-results">
                    @foreach (var result in batchResults)
                    {
                        <div class="result-item">
                            <div class="result-article">@result.ArticleTitle</div>
                            <div class="result-categories">
                                @foreach (var category in result.AssignedCategories)
                                {
                                    <FluentBadge Appearance="Appearance.Accent">
                                        @category.CategoryName (@($"{category.ConfidenceScore:P0}"))
                                    </FluentBadge>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <p>Aucun article √† classifier trouv√©.</p>
        }
    </FluentDialogBody>

    <FluentDialogFooter>
        <FluentButton @onclick="HideBatchDialog">Fermer</FluentButton>
    </FluentDialogFooter>
</FluentDialog>

<style>
    .categories-container {
        padding: 20px;
    }

    .classification-panel {
        margin-bottom: 30px;
        padding: 20px;
    }

    .panel-header {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 20px;
    }

    .panel-header h4 {
        margin: 0;
        color: var(--accent-foreground-rest);
    }

    .classification-actions {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .action-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .action-description {
        font-size: 0.85em;
        color: var(--neutral-foreground-rest);
        margin: 0;
    }

    .suggestions-section {
        border-top: 1px solid var(--neutral-stroke-divider-rest);
        padding-top: 20px;
        margin-top: 20px;
    }

    .suggestions-section h5 {
        margin: 0 0 16px 0;
        color: var(--accent-foreground-rest);
    }

    .suggestions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 16px;
    }

    .suggestion-card {
        border: 1px solid var(--neutral-stroke-rest);
        border-radius: 8px;
        padding: 16px;
        background: var(--neutral-layer-1);
    }

    .suggestion-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
    }

    .suggestion-description {
        font-size: 0.9em;
        color: var(--neutral-foreground-rest);
        margin: 0 0 12px 0;
        line-height: 1.4;
    }

    .suggestion-keywords {
        display: flex;
        flex-wrap: wrap;
        gap: 6px;
        margin-bottom: 12px;
    }

    .suggestion-actions {
        display: flex;
        justify-content: flex-end;
        gap: 8px;
    }

    .categories-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 40px;
    }

    .empty-state {
        text-align: center;
        padding: 40px;
    }

    .empty-state svg {
        width: 64px;
        height: 64px;
        margin-bottom: 16px;
        opacity: 0.5;
    }

    .form-group {
        margin-bottom: 16px;
    }

    .dialog-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .warning-text {
        color: var(--error-color);
        font-weight: 500;
    }

    .batch-classification-content {
        display: flex;
        flex-direction: column;
        gap: 16px;
    }

    .classification-results {
        max-height: 400px;
        overflow-y: auto;
        border: 1px solid var(--neutral-stroke-rest);
        border-radius: 4px;
        padding: 12px;
    }

    .result-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 0;
        border-bottom: 1px solid var(--neutral-stroke-divider-rest);
    }

    .result-item:last-child {
        border-bottom: none;
    }

    .result-article {
        font-weight: 500;
    }

    .result-categories {
        display: flex;
        gap: 4px;
        flex-wrap: wrap;
    }
</style>
